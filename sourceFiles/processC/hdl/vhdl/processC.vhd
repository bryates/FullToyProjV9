-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity processC is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    bx_V : IN STD_LOGIC_VECTOR (1 downto 0);
    bx_o_V : OUT STD_LOGIC_VECTOR (1 downto 0);
    bx_o_V_ap_vld : OUT STD_LOGIC;
    inmem1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    inmem1_ce0 : OUT STD_LOGIC;
    inmem1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    inmem2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    inmem2_ce0 : OUT STD_LOGIC;
    inmem2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    outmem_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    outmem_ce0 : OUT STD_LOGIC;
    outmem_we0 : OUT STD_LOGIC;
    outmem_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of processC is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "processC,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu7p-flvb2104-1-e,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.873000,HLS_SYN_LAT=17,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=66,HLS_SYN_LUT=224,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tmp_3_fu_226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal bx_o_V_1_ack_in : STD_LOGIC;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal bx_o_V_1_data_reg : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal bx_o_V_1_vld_reg : STD_LOGIC := '0';
    signal bx_o_V_1_vld_in : STD_LOGIC;
    signal do_init_reg_110 : STD_LOGIC_VECTOR (0 downto 0);
    signal bx_V3_rewind_reg_126 : STD_LOGIC_VECTOR (1 downto 0);
    signal i1_reg_140 : STD_LOGIC_VECTOR (3 downto 0);
    signal bx_V3_phi_reg_154 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_6_cast_fu_198_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_cast_reg_254 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_6_cast_reg_254_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_reg_269 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_269_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_232_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_273 : STD_LOGIC_VECTOR (3 downto 0);
    signal outdata_fu_244_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal outdata_reg_278 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_do_init_phi_fu_114_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_bx_V3_rewind_phi_fu_130_p6 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_i1_phi_fu_144_p6 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_bx_V3_phi_phi_fu_159_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter0_bx_V3_phi_reg_154 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_9_cast_fu_221_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_fu_176_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_180_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_5_cast_fu_188_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_cast_fu_172_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_fu_192_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_7_fu_203_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_8_cast_fu_211_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_cast2_fu_168_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_9_fu_215_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal islarger_fu_238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_152 : BOOLEAN;
    signal ap_condition_138 : BOOLEAN;
    signal ap_condition_46 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    bx_V3_phi_reg_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_46)) then
                if ((ap_phi_mux_do_init_phi_fu_114_p6 = ap_const_lv1_0)) then 
                    bx_V3_phi_reg_154 <= ap_phi_mux_bx_V3_rewind_phi_fu_130_p6;
                elsif ((ap_phi_mux_do_init_phi_fu_114_p6 = ap_const_lv1_1)) then 
                    bx_V3_phi_reg_154 <= bx_V;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    bx_V3_phi_reg_154 <= ap_phi_reg_pp0_iter0_bx_V3_phi_reg_154;
                end if;
            end if; 
        end if;
    end process;

    bx_o_V_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (bx_o_V_1_vld_reg = ap_const_logic_0) and (bx_o_V_1_vld_in = ap_const_logic_1))) then 
                bx_o_V_1_vld_reg <= ap_const_logic_1;
            elsif (((bx_o_V_1_vld_in = ap_const_logic_0) and (ap_const_logic_1 = ap_const_logic_1) and (bx_o_V_1_vld_reg = ap_const_logic_1))) then 
                bx_o_V_1_vld_reg <= ap_const_logic_0;
            end if; 
        end if;
    end process;

    do_init_reg_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_3_reg_269 = ap_const_lv1_0))) then 
                do_init_reg_110 <= ap_const_lv1_0;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_3_reg_269 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                do_init_reg_110 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    i1_reg_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_3_reg_269 = ap_const_lv1_0))) then 
                i1_reg_140 <= i_reg_273;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_3_reg_269 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                i1_reg_140 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_3_reg_269 = ap_const_lv1_0))) then
                bx_V3_rewind_reg_126 <= bx_V3_phi_reg_154;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (bx_o_V_1_vld_reg = ap_const_logic_0) and (bx_o_V_1_vld_in = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) and (ap_const_logic_1 = ap_const_logic_1) and (bx_o_V_1_vld_in = ap_const_logic_1) and (bx_o_V_1_vld_reg = ap_const_logic_1)))) then
                bx_o_V_1_data_reg <= bx_V3_phi_reg_154;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_reg_273 <= i_fu_232_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                outdata_reg_278 <= outdata_fu_244_p3;
                tmp_3_reg_269 <= tmp_3_fu_226_p2;
                tmp_3_reg_269_pp0_iter1_reg <= tmp_3_reg_269;
                    tmp_6_cast_reg_254(5 downto 0) <= tmp_6_cast_fu_198_p1(5 downto 0);
                    tmp_6_cast_reg_254_pp0_iter1_reg(5 downto 0) <= tmp_6_cast_reg_254(5 downto 0);
            end if;
        end if;
    end process;
    tmp_6_cast_reg_254(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    tmp_6_cast_reg_254_pp0_iter1_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_reset_idle_pp0 = ap_const_logic_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_reset_idle_pp0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(bx_o_V_1_ack_in, ap_enable_reg_pp0_iter2)
    begin
                ap_block_pp0_stage0_01001 <= ((bx_o_V_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(bx_o_V_1_ack_in, ap_enable_reg_pp0_iter2)
    begin
                ap_block_pp0_stage0_11001 <= ((bx_o_V_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(bx_o_V_1_ack_in, ap_enable_reg_pp0_iter2)
    begin
                ap_block_pp0_stage0_subdone <= ((bx_o_V_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter2_assign_proc : process(bx_o_V_1_ack_in)
    begin
                ap_block_state4_pp0_stage0_iter2 <= (bx_o_V_1_ack_in = ap_const_logic_0);
    end process;


    ap_condition_138_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_138 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_152_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0)
    begin
                ap_condition_152 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_46_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_46 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, tmp_3_reg_269_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_3_reg_269_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_bx_V3_phi_phi_fu_159_p4_assign_proc : process(bx_V, ap_phi_mux_do_init_phi_fu_114_p6, ap_phi_mux_bx_V3_rewind_phi_fu_130_p6, ap_phi_reg_pp0_iter0_bx_V3_phi_reg_154, ap_condition_152)
    begin
        if ((ap_const_boolean_1 = ap_condition_152)) then
            if ((ap_phi_mux_do_init_phi_fu_114_p6 = ap_const_lv1_0)) then 
                ap_phi_mux_bx_V3_phi_phi_fu_159_p4 <= ap_phi_mux_bx_V3_rewind_phi_fu_130_p6;
            elsif ((ap_phi_mux_do_init_phi_fu_114_p6 = ap_const_lv1_1)) then 
                ap_phi_mux_bx_V3_phi_phi_fu_159_p4 <= bx_V;
            else 
                ap_phi_mux_bx_V3_phi_phi_fu_159_p4 <= ap_phi_reg_pp0_iter0_bx_V3_phi_reg_154;
            end if;
        else 
            ap_phi_mux_bx_V3_phi_phi_fu_159_p4 <= ap_phi_reg_pp0_iter0_bx_V3_phi_reg_154;
        end if; 
    end process;


    ap_phi_mux_bx_V3_rewind_phi_fu_130_p6_assign_proc : process(ap_CS_fsm_pp0_stage0, bx_V3_rewind_reg_126, bx_V3_phi_reg_154, tmp_3_reg_269, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_3_reg_269 = ap_const_lv1_0))) then 
            ap_phi_mux_bx_V3_rewind_phi_fu_130_p6 <= bx_V3_phi_reg_154;
        else 
            ap_phi_mux_bx_V3_rewind_phi_fu_130_p6 <= bx_V3_rewind_reg_126;
        end if; 
    end process;


    ap_phi_mux_do_init_phi_fu_114_p6_assign_proc : process(do_init_reg_110, tmp_3_reg_269, ap_condition_138)
    begin
        if ((ap_const_boolean_1 = ap_condition_138)) then
            if ((tmp_3_reg_269 = ap_const_lv1_1)) then 
                ap_phi_mux_do_init_phi_fu_114_p6 <= ap_const_lv1_1;
            elsif ((tmp_3_reg_269 = ap_const_lv1_0)) then 
                ap_phi_mux_do_init_phi_fu_114_p6 <= ap_const_lv1_0;
            else 
                ap_phi_mux_do_init_phi_fu_114_p6 <= do_init_reg_110;
            end if;
        else 
            ap_phi_mux_do_init_phi_fu_114_p6 <= do_init_reg_110;
        end if; 
    end process;


    ap_phi_mux_i1_phi_fu_144_p6_assign_proc : process(i1_reg_140, tmp_3_reg_269, i_reg_273, ap_condition_138)
    begin
        if ((ap_const_boolean_1 = ap_condition_138)) then
            if ((tmp_3_reg_269 = ap_const_lv1_1)) then 
                ap_phi_mux_i1_phi_fu_144_p6 <= ap_const_lv4_0;
            elsif ((tmp_3_reg_269 = ap_const_lv1_0)) then 
                ap_phi_mux_i1_phi_fu_144_p6 <= i_reg_273;
            else 
                ap_phi_mux_i1_phi_fu_144_p6 <= i1_reg_140;
            end if;
        else 
            ap_phi_mux_i1_phi_fu_144_p6 <= i1_reg_140;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_bx_V3_phi_reg_154 <= "XX";

    ap_ready_assign_proc : process(tmp_3_fu_226_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_3_fu_226_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    bx_o_V <= bx_o_V_1_data_reg;

    bx_o_V_1_ack_in_assign_proc : process(bx_o_V_1_vld_reg)
    begin
        if (((bx_o_V_1_vld_reg = ap_const_logic_0) or ((ap_const_logic_1 = ap_const_logic_1) and (bx_o_V_1_vld_reg = ap_const_logic_1)))) then 
            bx_o_V_1_ack_in <= ap_const_logic_1;
        else 
            bx_o_V_1_ack_in <= ap_const_logic_0;
        end if; 
    end process;


    bx_o_V_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, tmp_3_reg_269, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_3_reg_269 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            bx_o_V_1_vld_in <= ap_const_logic_1;
        else 
            bx_o_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    bx_o_V_ap_vld <= bx_o_V_1_vld_reg;
    i_fu_232_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(ap_phi_mux_i1_phi_fu_144_p6));
    inmem1_address0 <= tmp_6_cast_fu_198_p1(5 - 1 downto 0);

    inmem1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inmem1_ce0 <= ap_const_logic_1;
        else 
            inmem1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    inmem2_address0 <= tmp_9_cast_fu_221_p1(6 - 1 downto 0);

    inmem2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inmem2_ce0 <= ap_const_logic_1;
        else 
            inmem2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    islarger_fu_238_p2 <= "1" when (signed(inmem1_q0) > signed(inmem2_q0)) else "0";
    outdata_fu_244_p3 <= 
        inmem1_q0 when (islarger_fu_238_p2(0) = '1') else 
        inmem2_q0;
    outmem_address0 <= tmp_6_cast_reg_254_pp0_iter1_reg(5 - 1 downto 0);

    outmem_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            outmem_ce0 <= ap_const_logic_1;
        else 
            outmem_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    outmem_d0 <= outdata_reg_278;

    outmem_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            outmem_we0 <= ap_const_logic_1;
        else 
            outmem_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_2_fu_180_p3 <= (tmp_fu_176_p1 & ap_const_lv4_0);
    tmp_3_fu_226_p2 <= "1" when (ap_phi_mux_i1_phi_fu_144_p6 = ap_const_lv4_F) else "0";
    tmp_5_cast_fu_188_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_180_p3),6));
    tmp_6_cast_fu_198_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_192_p2),64));
    tmp_6_fu_192_p2 <= std_logic_vector(unsigned(tmp_5_cast_fu_188_p1) + unsigned(tmp_cast_fu_172_p1));
    tmp_7_fu_203_p3 <= (ap_phi_mux_bx_V3_phi_phi_fu_159_p4 & ap_const_lv4_0);
    tmp_8_cast_fu_211_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_203_p3),7));
    tmp_9_cast_fu_221_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_215_p2),64));
    tmp_9_fu_215_p2 <= std_logic_vector(unsigned(tmp_8_cast_fu_211_p1) + unsigned(tmp_cast2_fu_168_p1));
    tmp_cast2_fu_168_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_i1_phi_fu_144_p6),7));
    tmp_cast_fu_172_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_i1_phi_fu_144_p6),6));
    tmp_fu_176_p1 <= ap_phi_mux_bx_V3_phi_phi_fu_159_p4(1 - 1 downto 0);
end behav;
